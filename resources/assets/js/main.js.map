{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n$(function () {\n\n    // Instantiate MixItUp:\n\n    $('#Container-box').mixItUp();\n});\n\n$(function () {\n    $('.upass-control').keyup(function () {\n        var x = $('.upass-control').val();\n        var y = x.length;\n\n        if (y > 5) {\n\n            $(\"#message\").css(\"display\", \"none\");\n\n            $(\".upass-control,.log-icon-two\").css(\"border\", \"1px solid #898989\");\n            $(\"#sizing-addon2 .fa-lock\").css(\"color\", \"#898989\");\n            $(\"#sizing-addon3 .fa-at\").css(\"color\", \"#898989\");\n        } else {\n\n            $(\"#message\").css(\"display\", \"block\");\n\n            $(\".upass-control,.log-icon-two\").css(\"border\", \"1px solid #c62c34\");\n            $(\"#sizing-addon2 .fa-lock\").css(\"color\", \"#c62c34\");\n            $(\"#sizing-addon3 .fa-at\").css(\"color\", \"#c62c34\");\n            $(\".log-icon-two\").css(\"border-left\", \"none\");\n        }\n    });\n});\n\n/*************/\n$(document).ready(function () {\n    var offset = 300;\n    var duration = 500;\n    $(window).scroll(function () {\n        if ($(this).scrollTop() > offset) {\n            $('.crunchify-top').fadeIn(duration);\n        } else {\n            $('.crunchify-top').fadeOut(duration);\n        }\n    });\n\n    $('.crunchify-top').click(function (event) {\n        event.preventDefault();\n        $('html, body').animate({ scrollTop: 0 }, duration);\n        return false;\n    });\n});\n\n/****************/\n$(\"#owl-demo\").owlCarousel({\n\n    autoPlay: 3000, //Set AutoPlay to 3 seconds\n\n    items: 4,\n    itemsDesktop: [1199, 3],\n    itemsDesktopSmall: [979, 3]\n\n});\n\n$(\"#Container-box\").owlCarousel({\n\n    autoPlay: 3000, //Set AutoPlay to 3 seconds\n\n    items: 4,\n    itemsDesktop: [1199, 3],\n    itemsDesktopSmall: [979, 3]\n\n});\n\n$(\"#dash-gallery\").owlCarousel({\n\n    autoPlay: 3000, //Set AutoPlay to 3 seconds\n\n    items: 6,\n    itemsDesktop: [1199, 3],\n    itemsDesktopSmall: [979, 3]\n\n});\n\n/***************/\n\n/*\r\n* UberAccordion\r\n*\r\n* Gabriel Aszalos\r\n*\r\n*/\n\n(function ($) {\n\n    var UberAccordion = function UberAccordion(parent, options) {\n\n        // Default settings\n\n        var defaults = {\n            verticalClass: 'accordion-vertical', // Class to apply when orientation is vertical\n            horizontalClass: 'accordion-horizontal', // Class to apply when orientation is horizontal\n            activeSlideClass: 'active', // Class to apply on active accordion slide\n            orientation: 'vertical', // Accordion orientation\n            orientationQuery: '(max-width: 700px)', // Media query which causes orientation change\n            startSlide: 1, // Starter slide\n            openMultiple: false, // Set to true for multiple open slides at a time\n            autoPlay: false, // Auto-play\n            autoPlaySpeed: 5000, // Auto-play interval\n            slideEvent: 'click', // Open slide event\n            animationSpeed: 333, // Animation Speed\n            headerItem: typeof options.headerClass === 'undefined' ? 'h1' : '.' + options.headerClass, // Header class\n            contentItem: typeof options.contentClass === 'undefined' ? 'div' : '.' + options.contentClass // Content class\n        };\n\n        var settings = $.extend(true, {}, defaults, options); // Add user settings with overwrite\n        var el = parent.children('ul'); // Accordion container\n        var slides = el.children().children(settings.contentItem); // Accordion slides\n        var headers = el.children('li').children(settings.headerItem); // Accordion headers\n        var state = {}; // Keeps current accordion state (ie. currentSlide, orientation, etc)\n\n        var showSlideCallback = function showSlideCallback() {\n            el.trigger('ua-slide-changed');\n        };\n\n        this.toggleSlide = function (slideNumber, override) {\n\n            if (!settings.openMultiple) {\n\n                // If multiple is disabled, open current slide and close other\n\n                if (slideNumber !== state.currentSlide || override) {\n                    this.hideSlide($(slides[el.children('li.' + settings.activeSlideClass).index()]));\n                    this.showSlide($(slides[slideNumber]));\n                }\n            } else {\n\n                // If multiple is enabled, toggle clicked slide\n\n                if ($(slides[slideNumber]).parent().hasClass(settings.activeSlideClass)) {\n                    this.hideSlide($(slides[slideNumber]));\n                } else {\n                    this.showSlide($(slides[slideNumber]));\n                }\n            }\n\n            state.currentSlide = slideNumber;\n        };\n\n        this.showSlide = function (slide) {\n\n            if (state.orientation === \"horizontal\") {\n                slide.slideDown(settings.animationSpeed, showSlideCallback);\n            } else {\n                slide.parent().animate({\n                    width: slide.parent().attr('data-width')\n                }, settings.animationSpeed, showSlideCallback);\n            }\n\n            slide.parent().addClass(settings.activeSlideClass);\n        };\n\n        this.hideSlide = function (slide) {\n            if (state.orientation === \"horizontal\") {\n                slide.slideUp(settings.animationSpeed);\n            } else {\n                slide.parent().animate({\n                    width: slide.parent().children(settings.headerItem).attr('data-width')\n                }, settings.animationSpeed);\n            }\n\n            slide.parent().removeClass(settings.activeSlideClass);\n        };\n\n        this.setOrientation = function (orientation) {\n\n            el.removeClass(settings.horizontalClass + ' ' + settings.verticalClass);\n\n            switch (orientation) {\n                case 'vertical':\n                    el.addClass(settings.verticalClass);\n\n                    installVertical();\n                    break;\n\n                case 'horizontal':\n                    el.addClass(settings.horizontalClass);\n\n                    // Don't wipe styles on first load\n\n                    if (typeof state.orientation !== 'undefined') {\n                        uninstallVertical();\n                    }\n\n                    applyHorizontalBase();\n\n                    break;\n            }\n\n            $(slides[state.currentSlide]).show().parent().addClass(settings.activeSlideClass);\n\n            state.orientation = orientation;\n        };\n\n        this.setAutoplay = function (enabled) {\n\n            var _this = this;\n\n            if (enabled) {\n                state.autoPlayInterval = setInterval(function () {\n                    var totalSlides = el.children('li').children(settings.headerItem).length;\n                    state.currentSlide = state.currentSlide < totalSlides - 1 ? state.currentSlide + 1 : 0;\n                    _this.toggleSlide(state.currentSlide, true);\n                }, settings.autoPlaySpeed);\n            } else {\n                if (typeof state.autoPlayInterval !== \"undefined\") {\n                    clearInterval(state.autoPlayInterval);\n                }\n            }\n        };\n\n        // Installs styling and events for vertical slider\n\n        var installVertical = function installVertical() {\n\n            uninstallVertical();\n\n            $(window).bind('resize', resizeContainer);\n\n            applyVerticalBase();\n            calculateSizes();\n        };\n\n        var applyVerticalBase = function applyVerticalBase() {\n\n            slides.parent().css(CSSObject.SlideContainers);\n\n            CSSObject.Headers.functions.setTransforms(-$(headers[0]).outerHeight(), 0);\n            CSSObject.Slides.functions.setHeight(el.outerHeight(true));\n            CSSObject.Slides.functions.setLeft($(headers[0]).outerHeight(true));\n\n            headers.css(CSSObject.Headers.defaults);\n            headers.setOuterWidth(el.innerHeight());\n            slides.css(CSSObject.Slides.defaults);\n        };\n\n        var applyHorizontalBase = function applyHorizontalBase() {\n            slides.css({ 'display': 'none' });\n        };\n\n        // Calculate sizes and save widths in data attributes\n        // for safe animating\n\n        var calculateSizes = function calculateSizes() {\n\n            var totalHeaderWidth = 0;\n            var currentContainer = el.children('li.' + settings.activeSlideClass);\n            var currentHeader = currentContainer.children(settings.headerItem);\n            var parentWidth = parent.innerWidth();\n\n            var slideWidth, headerWidth;\n\n            headers.each(function () {\n                headerWidth = $(this).outerHeight(true);\n                totalHeaderWidth += headerWidth;\n\n                $(this).parent().width(headerWidth);\n                $(this).attr('data-width', headerWidth);\n            });\n\n            slides.each(function () {\n                slideWidth = parentWidth - totalHeaderWidth;\n                headerWidth = $(this).parent().children(settings.headerItem).outerHeight(true);\n\n                $(this).setOuterWidth(slideWidth);\n                $(this).attr('data-width', slideWidth);\n\n                $(this).parent().attr('data-width', slideWidth + headerWidth - 1);\n            });\n\n            currentContainer.width(parentWidth - totalHeaderWidth + currentHeader.outerHeight(true) - 1);\n        };\n\n        // Called on resize event - adjusts accordion width according\n        // to parent to allow fluid design\n\n        var resizeContainer = function resizeContainer() {\n\n            if (state.orientation === \"vertical\") {\n\n                // If we don't hide the accordion before reading the parent's width value\n                // the parent will not auto-adjust in width\n\n                el.css('display', 'none');\n                el.width(parent.innerWidth());\n                el.css('display', 'block');\n\n                calculateSizes();\n            }\n        };\n\n        // Uninstalls vertical events and styles\n\n        var uninstallVertical = function uninstallVertical() {\n\n            $(window).unbind('resize', resizeContainer);\n\n            el.removeAttr('style');\n            el.children('li').removeAttr('style');\n            slides.removeAttr('style');\n\n            headers.removeAttr('style');\n        };\n\n        // Constructor\n\n        var initialize = function initialize(scope) {\n\n            if (typeof options.headerClass !== 'undefined' && typeof options.contentClass === 'undefined') {\n                throw \"Content class must be defined along with header class.\";\n            }\n\n            el.addClass('uberAccordion');\n\n            headers.on(settings.slideEvent, function (e) {\n                scope.toggleSlide(el.children('li').children(settings.headerItem).index(this));\n                scope.setAutoplay(false);\n\n                e.stopImmediatePropagation();\n            });\n\n            // If set to responsive, handle orientation changes\n\n            if (settings.orientationQuery) {\n                state.matchesQuery = window.matchMedia(settings.orientationQuery).matches;\n\n                // If media query match state changes, switch orientation\n                $(window).resize(function () {\n                    if (window.matchMedia(settings.orientationQuery).matches !== state.matchesQuery) {\n                        state.matchesQuery = window.matchMedia(settings.orientationQuery).matches;\n                        scope.setOrientation(state.orientation === 'vertical' ? 'horizontal' : 'vertical');\n                    }\n                });\n\n                if (state.matchesQuery) {\n                    settings.orientation = settings.orientation === 'vertical' ? 'horizontal' : 'vertical';\n                }\n            }\n\n            state.currentSlide = settings.startSlide - 1;\n            $(slides[state.currentSlide]).parent().addClass(settings.activeSlideClass);\n\n            scope.setOrientation(settings.orientation);\n\n            // Set-up auto-play if enabled\n\n            if (settings.autoPlay && !settings.openMultiple) {\n                scope.setAutoplay(true);\n            }\n\n            el.attr('data-accordion-active', \"true\");\n        };\n\n        initialize(this);\n    };\n\n    $.fn.uberAccordion = function (options) {\n\n        // Avoid double instantiating\n\n        return $(this).children(\"ul\").attr('data-accordion-active') === \"true\" ? false : new UberAccordion(this, options);\n    };\n\n    // Set total width with padding and borders (outerWidth)\n\n    $.fn.setOuterWidth = function (value) {\n        $(this).each(function () {\n            var paddingLeft = isNaN(parseInt($(this).css('padding-left'), 10)) || $(this).css('padding-left') === '100%' ? 0 : parseInt($(this).css('padding-left'), 10);\n            var paddingRight = isNaN(parseInt($(this).css('padding-right'), 10)) || $(this).css('padding-right') === '100%' ? 0 : parseInt($(this).css('padding-right'), 10);\n            var borderLeft = isNaN(parseInt($(this).css('border-left-width'), 10)) ? 0 : parseInt($(this).css('border-left-width'), 10);\n            var borderRight = isNaN(parseInt($(this).css('border-right-width'), 10)) ? 0 : parseInt($(this).css('border-right-width'), 10);\n\n            $(this).width(value - paddingLeft - paddingRight - borderLeft - borderRight);\n        });\n    };\n\n    // CSS Object for vertical accordion\n    // These base styles are necessary for all vertical accordions\n\n    var CSSObject = {\n\n        SlideContainers: {\n            'display': 'inline',\n            'overflow': 'hidden',\n            'float': 'left',\n            'height': '100%',\n            'position': 'relative'\n        },\n\n        Headers: {\n\n            defaults: {\n                'display': 'block',\n                'float': 'left',\n                'white-space': 'nowrap',\n                'position': 'absolute',\n                'top': '0',\n                'left': '0',\n                'transform-origin': '0 100% 0',\n                '-webkit-transform-origin': '0 100%',\n                '-moz-transform-origin': '0 100%',\n                '-ms-transform-origin': '0 100%'\n            },\n\n            functions: {\n                setTransforms: function setTransforms(x, y) {\n                    CSSObject.Headers.defaults['-webkit-transform'] = \"rotate(90deg) translate(\" + x + \"px, \" + y + \"px)\";\n                    CSSObject.Headers.defaults['-moz-transform'] = \"rotate(90deg) translate(\" + x + \"px, \" + y + \"px)\";\n                    CSSObject.Headers.defaults['-ms-transform'] = \"rotate(90deg) translate(\" + x + \"px, \" + y + \"px)\";\n                    CSSObject.Headers.defaults['-sand-transform'] = \"rotate(90deg) translate(\" + x + \"px, \" + y + \"px)\";\n                    CSSObject.Headers.defaults['transform'] = \"rotate(90deg) translate(\" + x + \"px, \" + y + \"px)\";\n                    //CSSObject.Headers.defaults['filter'] = \"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";\n                }\n            }\n        },\n\n        Slides: {\n\n            defaults: {\n                'float': 'left',\n                'height': 0,\n                'display': 'block',\n                'position': 'absolute',\n                'top': '0'\n            },\n\n            functions: {\n                setHeight: function setHeight(height) {\n                    CSSObject.Slides.defaults.height = height;\n                },\n                setLeft: function setLeft(left) {\n                    CSSObject.Slides.defaults.left = left;\n                }\n            }\n        }\n    };\n\n    $('.accordionContainer').uberAccordion({\n        headerClass: 'title',\n        contentClass: 'content'\n    });\n})(jQuery);\n\n/******************/\n\nfunction sliceSize(dataNum, dataTotal) {\n    return dataNum / dataTotal * 360;\n}\nfunction addSlice(sliceSize, pieElement, offset, sliceID, color) {\n    $(pieElement).append(\"<div class='slice \" + sliceID + \"'><span></span></div>\");\n    var offset = offset - 1;\n    var sizeRotation = -179 + sliceSize;\n    $(\".\" + sliceID).css({\n        \"transform\": \"rotate(\" + offset + \"deg) translate3d(0,0,0)\"\n    });\n    $(\".\" + sliceID + \" span\").css({\n        \"transform\": \"rotate(\" + sizeRotation + \"deg) translate3d(0,0,0)\",\n        \"background-color\": color\n    });\n}\nfunction iterateSlices(sliceSize, pieElement, offset, dataCount, sliceCount, color) {\n    var sliceID = \"s\" + dataCount + \"-\" + sliceCount;\n    var maxSize = 179;\n    if (sliceSize <= maxSize) {\n        addSlice(sliceSize, pieElement, offset, sliceID, color);\n    } else {\n        addSlice(maxSize, pieElement, offset, sliceID, color);\n        iterateSlices(sliceSize - maxSize, pieElement, offset + maxSize, dataCount, sliceCount + 1, color);\n    }\n}\nfunction createPie(dataElement, pieElement) {\n    var listData = [];\n    $(dataElement + \" span\").each(function () {\n        listData.push(Number($(this).html()));\n    });\n    var listTotal = 0;\n    for (var i = 0; i < listData.length; i++) {\n        listTotal += listData[i];\n    }\n    var offset = 0;\n    var color = [\"#dc9c34\", \"#373737\", \"#676769\"];\n    for (var i = 0; i < listData.length; i++) {\n        var size = sliceSize(listData[i], listTotal);\n        iterateSlices(size, pieElement, offset, i, 0, color[i]);\n        $(dataElement + \" li:nth-child(\" + (i + 1) + \")\").css(\"border-color\", color[i]);\n        offset += size;\n    }\n}\ncreatePie(\".pieID.legend\", \".pieID.pie\");\n\n/**********************/\n\n$(function () {\n\n    //Better to construct options first and then pass it as a parameter\n    var options = {\n        exportEnabled: true,\n        animationEnabled: true,\n        data: [{\n            type: \"splineArea\", //change it to line, area, bar, pie, etc\n            dataPoints: [{ y: 10 }, { y: 6 }, { y: 14 }, { y: 12 }, { y: 19 }, { y: 14 }, { y: 20 }, { y: 10 }, { y: 15 }]\n        }]\n    };\n\n    $(\"#chartContainer\").CanvasJSChart(options);\n});\n\n},{}]},{},[1]);\n"],"file":"main.js","sourceRoot":"/source/"}